/************************************************************\
 * Copyright 2014 Lawrence Livermore National Security, LLC
 * (c.f. AUTHORS, NOTICE.LLNS, COPYING)
 *
 * This file is part of the Flux resource manager framework.
 * For details, see https://github.com/flux-framework.
 *
 * SPDX-License-Identifier: LGPL-3.0
\************************************************************/

#ifndef _FLUX_CORE_VERSION_H
#define _FLUX_CORE_VERSION_H

#ifdef __cplusplus
extern "C" {
#endif

/* Flux uses semantic versioning: <major>.<minor>.<patch>
 */

/* The VERSION_STRING may include a "-N-hash" suffix from git describe
 * if this snapshot is not tagged.  This is not reflected in VERSION_PATCH.
 */
#define FLUX_CORE_VERSION_STRING    "@PACKAGE_VERSION@"
#define FLUX_CORE_VERSION_MAJOR     @AX_MAJOR_VERSION@
#define FLUX_CORE_VERSION_MINOR     @AX_MINOR_VERSION@
#define FLUX_CORE_VERSION_PATCH     @AX_POINT_VERSION@

/* The version in 3 bytes, for numeric comparison.
 */
#define FLUX_CORE_VERSION_HEX       ((FLUX_CORE_VERSION_MAJOR << 16) | \
                                     (FLUX_CORE_VERSION_MINOR << 8) | \
                                     (FLUX_CORE_VERSION_PATCH << 0))


/* These functions return the compiled-in versions.
 * Useful for determining the version of dynamically linked libflux-core.
 */

/* Returns FLUX_CORE_VERSION_STRING.
 */
const char *flux_core_version_string (void);

/* If major is non-NULL set it to FLUX_CORE_VERSION_MAJOR.
 * If minor is non-NULL set it to FLUX_CORE_VERSION_MINOR.
 * If patch is non-NULL set it to FLUX_CORE_VERSION_PATCH.
 * Returns FLUX_CORE_VERSION_HEX.
 */
int flux_core_version (int *major, int *minor, int *patch);


#ifdef __cplusplus
}
#endif

#endif /* !_FLUX_CORE_VERSION_H */

/*
 * vi:tabstop=4 shiftwidth=4 expandtab
 */

